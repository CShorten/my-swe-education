apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-orchestrator
spec:
  # Usually you want fewer orchestrators than workers
  replicas: 1
  selector:
    matchLabels:
      app: temporal-orchestrator
  template:
    metadata:
      labels:
        app: temporal-orchestrator
    spec:
      containers:
      - name: orchestrator
        image: your-registry/temporal-orchestrator:latest
        imagePullPolicy: Always
        env:
        - name: TEMPORAL_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: temporal-orchestrator-config
              key: TEMPORAL_NAMESPACE
        - name: TEMPORAL_TASKQUEUE
          valueFrom:
            configMapKeyRef:
              name: temporal-orchestrator-config
              key: TEMPORAL_TASKQUEUE
        - name: WORKFLOW_INTERVAL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: temporal-orchestrator-config
              key: WORKFLOW_INTERVAL_SECONDS
        volumeMounts:
        - name: temporal-certs
          mountPath: /etc/temporal/certs
          readOnly: true
        # Health monitoring configuration
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        # Resource management
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: temporal-certs
        secret:
          secretName: temporal-orchestrator-certs
